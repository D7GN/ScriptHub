--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.8) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (2==v0) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==4) then vv9(),...);break;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v15=function(v23,v24,...)local v25=1;local v26;v23=v5(v4(v23,5),"..",function(v46)if (v2(v46,2)==79) then v26=v1(v4(v46,1,1));return "";else local v80=v3(v1(v46,16));if v26 then local v91=v6(v80,v26);v26=nil;return v91;else return v80;end end end);local v27;v28=function(v47,v48,v49)if v49 then local v81=(v47/((6 -4)^(v48-(1 + 0))))%(((2 + 5) -(23 -18))^(((v49-1) -(v48-(1710 -(1435 + 274)))) + 1 + 0));return v81-(v81%(3 -2));else local v82=(1 + 1)^(v48-(4 -3));return (((v47%(v82 + v82))>=v82) and 1) or (0 -0);end end;local v29;v30=function()local v54=v2(v23,v25,v25);v25=v25 + 1;return v54;end;local v31;v32=function()local v55=1841 -(748 + (3691 -2598));local v56;local v57;while true do if (v55==(0 + 0)) then v56,v57=v2(v23,v25,v25 + (1463 -(1124 + 14 + 323)));v25=v25 + (9 -7);v55=1470 -(1227 + 242);end if (v55==((1574 -517) -(419 + 637))) then return (v57 * (1903 -(486 + 1161))) + v56;end end end;local v33;v34=function()local v58,v59,v60,v61=v2(v23,v25,v25 + (8 -5));v25=v25 + (10 -(2 + 4));return (v61 * (6896911 + 9880305)) + (v60 * (14565 + 50971)) + (v59 * ((1632 -(119 + 174)) -(1027 + 56))) + v58;end;local v35;v36=function()local v62=v34();local v63=v34();return (( -(2 + 0) * v28(v63,5 + 18 + 9)) + (919 -(47 + 871))) * ((1 + 1)^(v28(v63,(4244 -2560) -(942 + 721),31) -(2484 -(696 + 765)))) * ((((v28(v63,691 -(617 + 73),543 -(48 + 475)) * (((120 -(31 + 86)) -1)^(57 -25))) + v62)/(2^(25 + 27))) + 1);end;local v37;v38=function(v50)local v64;if  not v50 then local v83=0;while true do if (v83==0) then v50=v34();if (v50==((0 -0) -0)) then return "";end break;end end end v65=v4(v23,v25,(v25 + v50) -(1 + 0));v25=v25 + v50;local v66={};for v78=1 + 0, #v65 do v66[v78]=v3(v2(v4(v65,v78,v78)));end return v7(v66);end;local v39=v34;local v40;v41=function(...)return {...},v12("#",...);end;local v42;v43=function()local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==(0 -0)) then local v84=0;local v85;while true do if (v84==(0 + 0)) then v85=533 -(138 + 395);while true do if (v85==0) then local v123=0;while true do if (v123==(1885 -(1302 + 582))) then v85=1901 -(572 + 1328);break;end if (0==v123) then v68={};v69={};v123=1 -0;end end end if (v85==(2 -1)) then local v124=348 -(109 + 239);while true do if (v124~=(0 -0)) then else v70={};v71={v68,v69,nil,v70};v124=519 -(250 + 268);end if (v124==1) then v85=412 -(336 + 74);break;end end end if (v85==(5 -3)) then v67=1 + 0;break;end end break;end end end if (v67~=(1 -0)) then else local v86=0 -0;while true do if (v86==(1 -0)) then local v98=0;while true do if ((0 -0)~=v98) then else for v126=2 -1,v72 do local v127=0;local v128;local v129;while true do if (v127==(0 + 0)) then v128=v30();v129=nil;v127=1;end if (1~=v127) then else if (v128==1) then v129=v30()~=0;elseif (v128==2) then v129=v36();elseif (v128==3) then v129=v38();end v73[v126]=v129;break;end end end v71[3]=v30();v98=1 + 0;end if (v98==(2 -1)) then v86=2;break;end end end if (v86==0) then v72=v34();v73={};v86=1;end if (v86==(243 -(85 + 156))) then v67=2;break;end end end if (v67==2) then local v87=0 -0;while true do if (v87~=(1123 -(1057 + 65))) then else for v99=1,v34() do v70[v99]=v34();end return v71;end if (0~=v87) then else for v101=1 + 0,v34() do local v102=0;local v103;local v104;local v105;while true do if (v102==(0 + 0)) then v103=0 + 0;v104=nil;v102=1 + 0;end if (v102~=(566 -(525 + 40))) then else v105=nil;while true do if ((1817 -(537 + 1280))==v103) then local v135=1237 -(52 + 1185);while true do if ((0 -0)~=v135) then else v104=1426 -(1111 + 315);v105=nil;v135=1 + 0;end if (v135==1) then v103=510 -(440 + 69);break;end end end if (v103==1) then while true do if (v104~=0) then else v105=v30();if (v28(v105,1,1213 -(793 + 419))~=(0 -0)) then else local v137=316 -(48 + 268);local v138;local v139;local v140;local v141;local v142;while true do if (v137~=1) then else local v145=0;while true do if (v145==(1 + 0)) then v137=6 -4;break;end if (v145~=0) then else v140=nil;v141=nil;v145=1;end end end if (2==v137) then v142=nil;while true do if (v138==1) then v141=nil;v142=nil;v138=2 + 0;end if (v138==(0 -0)) then local v147=0;local v148;while true do if (v147~=0) then else v148=0;while true do if (v148==1) then v138=2 -1;break;end if (v148==(0 -0)) then local v253=0 + 0;while true do if (v253~=1) then else v148=1;break;end if (v253~=0) then else v139=0;v140=nil;v253=1240 -(427 + 812);end end end end break;end end end if (v138==(2 + 0)) then while true do if (v139~=(3 -0)) then else if (v28(v141,3,1 + 2)~=(1 -0)) then else v142[12 -8]=v73[v142[1879 -(1731 + 144)]];end v68[v101]=v142;break;end if (v139~=2) then else local v150=0 -0;local v151;while true do if (0==v150) then v151=0;while true do if (v151==(1 + 0)) then v139=6 -3;break;end if ((256 -(71 + 185))==v151) then local v269=1683 -(1428 + 255);local v270;while true do if (v269==0) then v270=0 -0;while true do if (v270==0) then if (v28(v141,1,1 -0)~=(1 -0)) then else v142[2]=v73[v142[2]];end if (v28(v141,1 + 1,490 -(474 + 14))==1) then v142[3]=v73[v142[3]];end v270=1;end if (v270~=1) then else v151=1;break;end end break;end end end end break;end end end if (v139==(1 -0)) then local v152=0 + 0;local v153;while true do if (v152~=(0 + 0)) then else v153=0 + 0;while true do if (v153==1) then v139=1193 -(334 + 857);break;end if (v153==(0 -0)) then local v271=0;while true do if (0==v271) then v142={v32(),v32(),nil,nil};if (v140==(0 -0)) then local v341=0;local v342;local v343;while true do if (0~=v341) then else v342=489 -(254 + 235);v343=nil;v341=1;end if (v341==(962 -(792 + 169))) then while true do if ((0 + 0)~=v342) then else v343=0 -0;while true do if (v343~=(0 + 0)) then else v142[2 + 1]=v32();v142[5 -1]=v32();break;end end break;end end break;end end elseif (v140==1) then v142[3]=v34();elseif (v140==2) then v142[2 + 1]=v34() -(2^(1183 -(456 + 711)));elseif (v140==3) then local v379=0 + 0;local v380;while true do if (v379~=(154 -(80 + 74))) then else v380=0;while true do if (v380==(1143 -(565 + 578))) then v142[12 -9]=v34() -((6 -4)^(39 -(20 + 3)));v142[11 -7]=v32();break;end end break;end end end v271=1;end if ((1 -0)==v271) then v153=1;break;end end end end break;end end end if (v139~=(0 -0)) then else local v154=0;local v155;while true do if (v154==(0 + 0)) then v155=0 + 0;while true do if (v155==1) then v139=1796 -(719 + 1076);break;end if (v155~=0) then else local v272=724 -(98 + 626);local v273;while true do if (0==v272) then v273=0;while true do if (v273==(0 + 0)) then local v349=0;while true do if (v349==1) then v273=1;break;end if (v349==0) then v140=v28(v105,2,2 + 1);v141=v28(v105,4,6);v349=1;end end end if (1==v273) then v155=1;break;end end break;end end end end break;end end end end break;end end break;end if (v137~=(1217 -(597 + 620))) then else local v146=0;while true do if (v146==(1 + 0)) then v137=2 -1;break;end if (v146~=(0 + 0)) then else v138=0 + 0;v139=nil;v146=1;end end end end end break;end end break;end end break;end end end for v106=1,v34() do v69[v106-1]=v42();end v87=1;end end end end end;local v44;v45=function(v51,v52,v53)local v74=0;local v75;local v76;local v77;while true do if (v74==1) then v77=v51[3];return function(...)local v92=1;local v93= -1;local v94={...};local v95=v12("#",...) -1;local v96;v97=function()local v108=v75;local v109=v76;local v110=v77;local v111=v41;local v112={};local v113={};local v114={};for v119=0 + 0 + 0,v95 do if (((1931 + 1154)>((17720 -13104) -2827)) and (v119>=v110)) then v112[v119-v110]=v94[v119 + 1 + 0];else v114[v119]=v94[v119 + 1];end end local v115=(v95-v110) + 1 + 0;local v116;local v117;while true do local v120=398 -(20 + 378);local v121;local v122;while true do if ((v120==(23 -(5 + 17))) or ((1895 -1090)==((11641 -(139 + 215)) -8834))) then while true do if ((v121==(1641 -(1116 + (799 -274)))) or (4686==3903)) then v122=0 + (0 -0);while true do if ((3032>=(12113 -9565)) and (v122==(1 -0))) then if ((v117<=(51 -31)) or ((2680 -1963)>4948)) then if ((v117<=9) or ((2399 -1322)==(1227 + 1))) then if (((3466 + 633)>=(12562 -(10758 -(405 + 1109)))) and (v117<=((7 -1) -2))) then if ((v117<=(854 -((390 -233) + 696))) or ((4899 -2582)>=(2428 -(42 + 14)))) then if (((1233 + 769)==2002) and (v117==0)) then local v156=0;local v157;local v158;while true do if (((1693 -(65 + 183))<(3429 + 570)) and (v156==(3 -2))) then for v257=v157 + 1 + 0,v116[1809 -(877 + 929)] do v8(v158,v114[v257]);end break;end if (((1643 -961)<730) and (v156==0)) then local v254=0 + (0 -0);while true do if ((v254==0) or ((3954 -(541 + 516))<(149 + 11))) then v157=v116[2 + 0];v158=v114[v157];v254=1 + 0;end if (((16696 -12460)>(3392 -(208 + 381))) and (v254==(4 -3))) then v156=1;break;end end end end else local v159=0 -0;local v160;local v161;local v162;while true do if (((6152 -3818)<=(5055 -(67 + 52))) and ((0 + 0)==v159)) then v160=0;v161=nil;v159=1 + 0;end if (((1120 + 2629)<(2075 + (6272 -3622))) and (v159==(3 -(4 -2)))) then v162=nil;while true do if ((v160==(0 + 0)) or ((383 + (4194 -2168))>(4032 -(1383 + 6)))) then local v276=0 + 0;while true do if ((1486>=(2212 -1087)) and (v276==(1 + 0))) then v160=1;break;end if ((v276==(0 + 0)) or (1643>4406)) then v161=v116[102 -(57 + 43)];v162={};v276=1;end end end if (((1148 + 1884)<=(4904 -(201 + 1067))) and ((1 + 0)==v160)) then for v291=1 + 0, #v113 do local v292=0;local v293;local v294;while true do if (((1243 -458)<(4092 -(373 + 1070))) and (v292==(0 + 0))) then v293=198 -(29 + 169);v294=nil;v292=1 + 0;end if ((v292==(1 + 0)) or (((1061 + 1932) -(450 + 28))<(703 + (1861 -(158 + 286))))) then while true do if ((v293==(1714 -(1502 + 212))) or (4619<3605)) then v294=v113[v291];for v359=0, #v294 do local v360=(0 + 0) -0;local v361;local v362;local v363;while true do if ((v360==(0 + 0)) or (((1270 + 1353) -1071)>=3639)) then v361=v294[v359];v362=v361[1086 -(106 + 979)];v360=1972 -((1315 -(334 + 588)) + 1578);end if (((3335 -((247 -175) + 472))<=(7630 -4170)) and (v360==1)) then v363=v361[593 -(161 + 430)];if (((v362==v114) and (v363>=v161)) or ((899 + 198)==(9426 -7256))) then local v388=0;local v389;while true do if ((v388==(0 -0)) or (865>=(4075 -(455 + 51)))) then v389=0;while true do if ((v389==0) or (3853<(1265 -(496 + 235)))) then v162[v363]=v362[v363];v361[1053 -(202 + 850)]=v162;break;end end break;end end end break;end end end break;end end break;end end end break;end end break;end end end elseif ((2564<4517) and (v117<=((3811 -(137 + 1776)) -((2261 -(609 + 76)) + 320)))) then if (((909 + 474)>=1130) and (v114[v116[3 -1]]<v116[22 -(12 + 6)])) then v92=v92 + (3 -(2 + 0));else v92=v116[1087 -(512 + 572)];end elseif ((v117==(1369 -(1292 + 74))) or ((4390 -1959)>=(6700 -4025))) then local v201=(573 -(516 + 19)) -(18 + 20);local v202;local v203;while true do if ((v201==1) or ((394 + 2485)<=(1687 -(326 + (831 -655))))) then while true do if (((4864 -(204 + 631))>=(6087 -2754)) and ((1514 -(147 + 1367))==v202)) then v203=v116[770 -(640 + 128)];v114[v203]=v114[v203](v13(v114,v203 + (1 -0),v116[3]));break;end end break;end if ((v201==(1724 -(1196 + 528))) or (((3562 -2513) -269)<(490 + 213))) then local v260=0;while true do if ((4632>2820) and (v260==(0 + 0))) then v202=0 + 0;v203=nil;v260=1;end if ((816<(559 + 2869)) and ((38 -((92 -56) + (1511 -(1253 + 257))))==v260)) then v201=1;break;end end end end else local v204=0 -0;local v205;local v206;local v207;local v208;local v209;while true do if ((v204==2) or (2145<(901 + 486))) then v209=nil;while true do if (((6809 -1917)>=((817 -(61 + 699)) + 143)) and (1==v205)) then local v297=0;local v298;while true do if ((v297==0) or (2286<((1542 + 543) -(668 + 180)))) then v298=0 + 0;while true do if ((v298==(1 + 0)) or ((8315 -6118)>3786)) then v205=4 -2;break;end if ((v298==0) or ((1355 + 70)>(6973 -3690))) then local v364=0 + 0;while true do if ((v364==(1 + 0)) or (2443>=(5562 -1720))) then v298=(1 + 0) -0;break;end if (((15023 -10658)==(4896 -(415 + 116))) and (v364==(0 + 0))) then v93=(v208 + v206) -1;v209=0 -0;v364=1 + 0;end end end end break;end end end if (((7826 -2979)>(2301 + 2218)) and (v205==2)) then for v309=v206,v93 do local v310=0 -0;local v311;local v312;while true do if ((262<=(4392 -3126)) and (v310==((3198 -(426 + 792)) -(431 + 1548)))) then while true do if (((7242 -(10482 -6478))>=(926 -570)) and (v311==((2467 -973) -(1336 + 118 + 40)))) then v312=262 -(193 + 69);while true do if (((4188 -(1098 + 554))<(7189 -4247)) and (v312==(0 + 0))) then v209=v209 + (1647 -(856 + 790));v114[v309]=v207[v209];break;end end break;end end break;end if ((488==488) and (v310==(1782 -(828 + 954)))) then v311=0 -0;v312=nil;v310=(316 -(248 + 66)) -1;end end end break;end if ((1114<=(2801 + 1395)) and (v205==(0 + 0))) then local v299=(1216 -(363 + 853)) + 0;while true do if ((v299==((6 -3) -2)) or ((1394 + 2511)>(3602 + 490))) then v205=1 + 0 + 0;break;end if ((v299==(1813 -(730 + 1083))) or (1793<(2937 -1206))) then local v344=0 -0;while true do if (((2004 -(361 + 133))<(9604 -6859)) and ((2 -1)==v344)) then v299=1 + (518 -(120 + 398));break;end if (((579 -196)<=(6685 -(562 + 1339))) and (v344==(0 + 0))) then v206=v116[1 + 1];v207,v208=v111(v114[v206](v13(v114,v206 + (3 -(4 -2)),v116[1 + 2])));v344=1 + 0;end end end end end end break;end if (((2327 -(824 + 83))>(403 + 673)) and (v204==(396 -(362 + 34)))) then v205=0;v206=nil;v204=(1184 -(344 + 839)) -0;end if (((3407 + 438)<(196 + 4555)) and (v204==1)) then v207=nil;v208=nil;v204=2;end end end elseif ((v117<=(4 + (7 -5))) or ((903 + 346)<201)) then if ((v117==(1 + 4)) or ((7505 -4486)==(1407 + 110))) then v92=v116[(11 -4) -4];else v114[v116[828 -(249 + 577)]][v116[(1 -0) + 2]]=v114[v116[(1350 -(442 + 905)) + 1]];end elseif ((v117<=(2 + 5)) or ((77 + 198)>=(4368 -2811))) then v114[v116[1 + 1]]=v52[v116[3]];elseif ((v117>(1 + 4 + 3)) or ((677 + 1542)==(8834 -5723))) then v114[v116[1 + 1]]=v114[v116[14 -11]] -v116[6 -2];else v114[v116[(5 -3) + 0]]=v116[547 -(381 + 163)]~=(293 -(45 + 248));end elseif (((4645 -(1142 + 204))==(7521 -4222)) and (v117<=(7 + (506 -(156 + 343))))) then if ((v117<=(1 + (106 -(20 + 76)))) or ((9831 -6754)>=(7152 -3031))) then if (((4647 -(279 + 160))>=(3194 + 181)) and (v117==(9 + 1))) then v114[v116[1885 -(1584 + (1247 -(291 + 657)))]]=v114[v116[(4 -2) + 1]][v114[v116[4 + 0 + 0]]];else for v196=v116[2],v116[1167 -(494 + 670)] do v114[v196]=nil;end end elseif (((5785 -3424)==(5891 -3530)) and (v117<=12)) then local v170=(78 -(57 + 21)) + 0;local v171;local v172;local v173;local v174;while true do if (((0 + 0)==v170) or ((21625 -16773)<=1549)) then v171=0 + 0;v172=nil;v170=1109 -(282 + 826);end if ((v170==2) or ((1497 + 1844)==(3943 -(681 + 608)))) then while true do if (((745 -(725 + 20))==v171) or ((1481 + 569)<(226 -(1394 -(60 + 1252))))) then local v277=0 -0;while true do if ((v277==(1484 -(681 + 802))) or ((4951 -3009)>=(3853 + 214))) then v171=804 -(400 + 403);break;end if ((v277==0) or (2862<=(1242 -811))) then v172=0;v173=nil;v277=1173 -(152 + 1020);end end end if ((v171==(1 + 0)) or (1270>3513)) then v174=nil;while true do if ((1570>((6569 -4317) -1321)) and (v172==(959 -(362 + 596)))) then for v329=v173 + (1134 -(203 + (2608 -1678))),v116[4] do v174=v174   .. v114[v329];end v114[v116[2 + 0]]=v174;break;end if ((v172==(0 -0)) or ((7826 -5719)>(6706 -2371))) then local v314=0 + (0 -0);local v315;while true do if (((2836 + 1258)>=3121) and (v314==(462 -(449 + 13)))) then v315=11 -((16 -8) + 3);while true do if ((v315==0) or ((533 + 454)>(3879 -(30 + 428)))) then local v370=0 -0;while true do if ((v370==0) or ((2185 + 1681)<=((2029 + 7064) -6674))) then v173=v116[1 + 2];v174=v114[v173];v370=(1442 -(503 + 938)) + 0;end if ((v370==(623 -(585 + 37))) or ((5869 -(327 + 1306))==(2938 -((2398 -(40 + 1308)) + 715)))) then v315=1;break;end end end if ((v315==(1 + 0)) or ((6310 -(989 + 620))<=(244 + 665))) then v172=1505 -(701 + 803);break;end end break;end end end end break;end end break;end if ((v170==(3 -(5 -3))) or ((14402 -10096)<=(1993 + 660))) then v173=nil;v174=nil;v170=2;end end elseif (((2505 -(989 + 670))<(1408 + (1480 -906))) and (v117==(1483 -(1242 + 228)))) then local v212=0 + 0;local v213;local v214;while true do if ((v212==(20 -(14 + 5))) or ((1314 -524)>(13861 -10732))) then while true do if (((1531 + (200 -122))<(1638 + 2625)) and (v213==(674 -(349 + 147 + 178)))) then v214=v116[2];v114[v214](v13(v114,v214 + 1 + 0,v116[3]));break;end end break;end if (((4976 -(983 + 971))==(4138 -(1105 + 11))) and (v212==(0 -0))) then v213=0;v214=nil;v212=1;end end else v53[v116[3]]=v114[v116[2]];end elseif ((v117<=17) or (((36698 -25903) -8045)==(8998 -(6646 -(411 + 315))))) then if ((v117<=(11 + 4)) or ((14837 -9982)==(4076 + 524))) then local v175=1007 -(30 + 241 + 736);local v176;local v177;local v178;while true do if (((0 -0)==v175) or (423>(1680 -545))) then v176=(1793 -(178 + 1615)) -0;v177=nil;v175=(1 -0) + 0;end if ((v175==1) or ((133 + 1382)>=(10385 -7436))) then v178=nil;while true do if (((7156 -5447)>(2402 -1381)) and (v176==(2 -1))) then v114[v177 + (357 -(232 + 124))]=v178;v114[v177]=v178[v116[4]];break;end if (((3668 -(292 + 97))<(3928 + 1061)) and (v176==0)) then local v281=0 -0;while true do if ((v281==(0 + 0)) or (((1479 + 272) -480)>(4876 -(371 + 74)))) then v177=v116[196 -(141 + 53)];v178=v114[v116[3]];v281=2 -1;end if (((5913 -1611)>(3555 -(318 + 637))) and (v281==(95 -(86 + 8)))) then v176=1682 -(428 + (3591 -2338));break;end end end end break;end end elseif ((v117>(36 -20)) or ((9543 -4914)==(2173 -(766 + 270)))) then local v217=951 -((945 -(109 + 569)) + 484 + 200);local v218;local v219;while true do if ((v217==(1419 -(591 + 827))) or ((6343 -3845)>=(4726 -(577 + 290)))) then while true do if (((1770 + 1976)>=(629 + 996)) and ((614 -(36 + 578))==v218)) then v219=v116[1593 -(356 + 1235)];v114[v219](v114[v219 + (1005 -(834 + 170))]);break;end end break;end if ((v217==0) or ((215 + 380)==(2907 -(2798 -(791 + 964))))) then local v261=0;while true do if ((v261==0) or ((4983 -(75 + 1912))==((24751 -18695) -(927 + 236)))) then v218=0 -(310 -(34 + 276));v219=nil;v261=354 -(65 + 288);end if (((2075 -1542)==533) and ((2 -1)==v261)) then v217=1;break;end end end end else local v220=798 -(48 + 750);local v221;local v222;local v223;while true do if (((1718 -1188)<(10335 -7545)) and (v220==(4 -(652 -(346 + 304))))) then for v282=1 + 0,v116[4 -(0 -0)] do local v283=0 + 0;local v284;while true do if (((11854 -(3972 + 4586))<((5245 -(1498 + 245)) + (2216 -(15 + 821)))) and ((1 + 0)==v283)) then if ((v284[(6 -4) -1]==(40 -22)) or (4163==344)) then v223[v282-(1173 -(954 + (889 -671)))]={v114,v284[3]};else v223[v282-1]={v52,v284[5 -2]};end v113[ #v113 + (2 -1) + 0]=v223;break;end if ((v283==0) or ((1219 + 2657)>=(6714 -(76 + 1775)))) then local v319=0 -0;while true do if ((v319==1) or ((33 + 187)>(1475 + 2832))) then v283=459 -(255 + 203);break;end if ((v319==(233 -(153 + 80))) or ((2016 + 1967)<=(5325 -(1353 + 393)))) then v92=v92 + 1;v284=v108[v92];v319=1;end end end end end v114[v116[1 + 1]]=v44(v221,v222,v53);break;end if (((56 + 286)<=(7478 -5726)) and (v220==0)) then local v263=0 -0;while true do if (((3 -2)==v263) or ((141 + 1085)>=(2444 + 668))) then v220=1;break;end if ((v263==((785 -(610 + 175)) -0)) or ((585 + 1892)<=(2350 -((360 -180) + 54)))) then v221=v109[v116[3 + 0]];v222=nil;v263=1 + 0;end end end if ((4556>=1740) and (v220==(268 -((1773 -(330 + 1289)) + 113)))) then local v264=0 -0;while true do if (((144 + 365)<(506 + (2991 -1869))) and (v264==((3 -2) + 0))) then v220=7 -5;break;end if ((v264==((1508 -(1041 + 467)) + 0)) or (3115<(1189 + 1124))) then v223={};v222=v10({},{__index=function(v320,v321)local v330=0 -0;local v331;while true do if (((2264 + 971)>(3782 -(1050 + 720))) and (v330==0)) then local v354=1189 -(107 + 177 + 905);while true do if ((v354==((0 + 0) -0)) or (1410>(4570 -(156 + 125)))) then v331=v223[v321];return v331[1508 -(682 + 825)][v331[5 -3]];end end end end end,__newindex=function(v322,v323,v324)local v332=(1067 -(137 + 138)) -(207 + 585);local v333;local v334;while true do if (((132 + 377 + 729)==(3684 -2446)) and (v332==(1 + 0))) then while true do if ((v333==(1095 -(870 + (1910 -(1050 + 635))))) or ((5493 -2742)>=(11590 -7413))) then v334=v223[v323];v334[3 -2][v334[300 -((412 -222) + 108)]]=v324;break;end end break;end if ((v332==((0 -0) -0)) or ((1189 -(82 + 329))<=(113 -79))) then v333=0 -0;v334=nil;v332=1;end end end});v264=32 -(15 + 16);end end end end end elseif ((v117<=(64 -46)) or (65==3111)) then v114[v116[1 + 1]]=v114[v116[5 -2]];elseif ((v117==((14 + 20) -15)) or ((1138 -(1149 -303))==(4342 -(78 + 246)))) then v114[v116[111 -(55 + 54)]][v114[v116[807 -(60 + 744)]]]=v116[(1785 -(154 + 1630)) + 3];else v114[v116[1451 -(981 + 468)]]=v44(v109[v116[2 + 1]],nil,v53);end elseif ((1746<=(18623 -(4845 + 9316))) and (v117<=(18 + 13))) then if ((v117<=(8 + 17)) or ((1578 + 74)>=3352)) then if ((v117<=(1969 -(224 + 1723))) or ((3330 -1181)<(1185 -(1019 + 47)))) then if ((v117==(13 + (947 -(828 + 111)))) or (2719==(1110 -(5 + 278)))) then if (((5272 -((1280 -(687 + 86)) + 1077))>(422 + 137 + 60)) and (v116[4 -2]<v114[v116[2 + 2]])) then v92=v92 + 1 + 0;else v92=v116[1 + 2];end else local v181=0 + 0;local v182;local v183;while true do if ((v181==0) or ((441 + 2815)<=415)) then v182=0 + 0;v183=nil;v181=1;end if (((12699 -8029)>=(2675 -1126)) and (v181==(3 -2))) then while true do if (((0 + 0)==v182) or ((3837 -(209 + 1554))>=(2394 + (1153 -(62 + 177))))) then v183=v116[2];v114[v183]=v114[v183](v114[v183 + (370 -(194 + 175))]);break;end end break;end end end elseif ((137==137) and (v117<=(1121 -(738 + 360)))) then local v184=0 + 0;local v185;local v186;local v187;local v188;local v189;while true do if (((7885 -3943)>(840 -230)) and (v184==(1 + 1))) then v189=nil;while true do if ((v185==(1718 -(46 + 1672))) or (1498<(1519 -(109 + 311)))) then v186=(109 -(102 + 7)) -0;v187=nil;v185=1 + 0;end if ((v185==1) or ((3149 -((1251 -410) + 266))==((7619 -2749) -(960 + 222)))) then v188=nil;v189=nil;v185=(1713 -(134 + 1578)) + 1;end if ((v185==(1497 -(1319 + 176))) or (((2449 -(294 + 605)) + 2954)<(7509 -3177))) then while true do if (((2 -1)==v186) or ((2694 + 2107)<=(16 + 19))) then v189=v116[2 + 1];for v335=1 -0,v189 do v188[v335]=v114[v187 + v335];end break;end if (((1465 + 1024)>(924 -348)) and (0==v186)) then local v326=0;while true do if (((5000 -(212 + 282))>=2885) and (v326==1)) then v186=4 -3;break;end if ((((2577 -(671 + 748)) + 1127)<=(4593 -(1853 + 39))) and ((0 + 0)==v326)) then local v351=0 -0;while true do if ((v351==(978 -(885 + 93))) or ((814 + 2120)>=(15014 -11995))) then v187=v116[6 -4];v188=v114[v187];v351=1 + 0;end if ((4342>=(2641 -916)) and ((1 + 0)==v351)) then v326=1;break;end end end end end end break;end end break;end if ((v184==((2 + 0) -1)) or ((3041 -1779)>(4546 -(833 + (1475 -(1032 + 410)))))) then v187=nil;v188=nil;v184=2;end if (((4334 -3443)<=(1280 + 2163)) and (v184==(0 + 0))) then v185=0 -0;v186=nil;v184=1;end end elseif ((v117==(82 -58)) or ((12646 -9399)>=(5695 -2149))) then v114[v116[1398 -(320 + 1076)]]=v53[v116[3]];else do return;end end elseif (((4155 + 558)>=1048) and (v117<=(12 + 16))) then if ((v117<=(177 -(27 + 0 + 124))) or ((1915 + 571 + 1440)>=(4527 + 78))) then local v190=0;local v191;while true do if ((((1498 -(471 + 1007)) + 1494)==(4591 -(380 + 2697))) and (v190==(0 -0))) then v191=v116[2];v114[v191]=v114[v191]();break;end end elseif ((v117>(139 -(26 + 86))) or (2635<=(3037 -(12 + 1058 + 189)))) then if ((v116[1719 -(269 + 1448)]<=v114[v116[859 -(320 + 535)]]) or ((8759 -4856)<1091)) then v92=v92 + 1;else v92=v116[8 -5];end else v114[v116[6 -4]]= #v114[v116[5 -2]];end elseif ((v117<=29) or ((8267 -4599)>(1772 + 1956))) then if ((v114[v116[(4 + 2) -4]]==v116[9 -5]) or ((11336 -9012)<(629 + 164))) then v92=v92 + 1 + 0;else v92=v116[3 -(0 -0)];end elseif ((v117>(1498 -(1020 + 448))) or ((7658 -2739)==1611)) then local v232=0 -(0 -0);local v233;local v234;local v235;while true do if ((v232==(0 + 0)) or ((1424 -543)>=(4700 -(1034 + 265)))) then local v265=0 -0;while true do if ((787<(5215 -(313 + 94))) and (v265==(1 + 0))) then v232=(2577 -1059) -(165 + 1352);break;end if (((334 -168)<1827) and (v265==0)) then v233=v116[5 -3];v234={v114[v233](v114[v233 + ((5 -3) -1)])};v265=1 -0;end end end if (((728 + 1 + 25)<3458) and (v232==(1 + 0))) then v235=0;for v287=v233,v116[4 + 0] do local v288=0 + 0;while true do if (((5694 -(1270 + 232))>=(2971 -((1112 -(535 + 176)) + 179))) and (v288==((0 -0) + 0))) then v235=v235 + 1;v114[v287]=v234[v235];break;end end end break;end end elseif ( not v114[v116[2]] or ((503 + 211)>(334 + 752 + 607))) then v92=v92 + 1 + 0;else v92=v116[3 + 0];end elseif ((1800<=3503) and (v117<=((78 + 93) -135))) then if (((6187 -(652 + 936))>707) and (v117<=(646 -(605 + 8)))) then if (((1632 -(209 + 138))<=4000) and (v117>(60 -28))) then if ((v114[v116[2]]~=v116[4]) or ((611 + 418)>=(738 + 2093 + (7558 -6009)))) then v92=v92 + 1;else v92=v116[3];end elseif (v114[v116[3 -1]] or ((568 -229)==(2392 -1703))) then v92=v92 + (1 -0);else v92=v116[(729 -(294 + 428)) -4];end elseif (((299 + 2570)==(5152 -2283)) and (v117<=34)) then if ((3120>=(2084 + 563)) and (v116[1 + 1]==v114[v116[6 -2]])) then v92=v92 + (1087 -(199 + 887));else v92=v116[1017 -(401 + 613)];end elseif ((v117>(8 + 27)) or ((731 -(224 + 381))>(11352 -(631 + 6374)))) then v114[v116[582 -(163 + 417)]][v116[2 + 1]]=v116[4];else v114[v116[222 -((262 -152) + 110)]]={};end elseif (((1631 + 1088)<(6991 -3616)) and (v117<=(33 + 6))) then if ((v117<=(64 -(4 + 23))) or ((4067 -2949)>((15732 -(695 + 89)) -11889))) then local v192=0;local v193;local v194;while true do if ((v192==(963 -(139 + 823))) or (2185==(1847 -(202 + (2210 -(606 + 303)))))) then while true do if ((v193==((2625 -1358) -(278 + 989))) or ((3596 -(1513 + 161))<(339 + 914))) then v194=v116[2];v114[v194]=v114[v194](v13(v114,v194 + (1490 -(1154 + 335)),v93));break;end end break;end if ((v192==(1311 -(704 + 607))) or ((377 -244)>(650 -207))) then v193=0;v194=nil;v192=3 -2;end end elseif ((v117>(33 + 5)) or (1810<(1706 -(401 + 68)))) then v114[v116[100 -((79 -23) + 42)]]=v114[v116[2 + 1]][v116[4]];else local v244=0;local v245;local v246;local v247;local v248;local v249;local v250;while true do if ((v244==(1 + 0)) or (4615<(4824 -(327 + 233)))) then local v266=690 -((1213 -576) + 53);while true do if (((3175 -(163 + 297))>(1724 -1341)) and (v266==(214 -((170 -100) + 143)))) then v244=(450 -321) -(83 + 44);break;end if (((2909 + 245)>(2458 -1612)) and (v266==((0 -0) -0))) then v247=nil;v248=nil;v266=4 -3;end end end if (((12980 -9423)==(4151 -(42 + 552))) and (v244==(7 -4))) then while true do if (((8669 -5344)>(3864 -(58 + 1599))) and (v245==(1975 -(896 + 1077)))) then local v304=0 -0;local v305;while true do if (((5275 -3712)==(2558 -(76 + 602 + (739 -422)))) and (v304==0)) then v305=0 + 0;while true do if (((13435 -9780)>=(1358 -(90 + 265))) and (0==v305)) then for v373=2 -(4 -3),v247 do v114[v248 + v373]=v249[v373];end v250=v249[3 -(2 + 0)];v305=1;end if ((960<1936) and (v305==(1 + 0))) then v245=274 -(150 + 121);break;end end break;end end end if ((v245==(975 -(939 + 32 + 3))) or (401>=(4641 -2288))) then local v306=0 + 0;while true do if (((1 -0)==v306) or ((3167 + 157 + 993)<=(288 + 1663))) then v245=241 -(154 + 85);break;end if ((2148>(1647 -(598 + 830))) and (v306==(0 -0))) then local v347=0 + 0;while true do if (((23 + 213)<(88 + 686)) and (v347==(0 + 0))) then v248=v246 + 2;v249={v114[v246](v114[v246 + 1],v114[v248])};v347=3 -2;end if (((6170 -(669 + 630))>=(3902 -(15 + 1))) and (v347==1)) then v306=1746 -(1470 + 275);break;end end end end end if (((5269 -3265)>(1395 -746)) and (v245==3)) then if (v250 or ((9607 -6809)<(3885 -(1087 + 289)))) then local v338=1821 -(310 + 1511);local v339;local v340;while true do if (((1 + 0)==v338) or ((620 + 2539)>=(10420 -5988))) then while true do if ((v339==0) or (3669>=(5457 -(621 + 419)))) then v340=(1647 -(1177 + 470)) -(381 -(109 + 272));while true do if ((3801==(4226 -(168 + 257))) and (v340==(0 + 0 + 0))) then v114[v248]=v250;v92=v116[3];break;end end break;end end break;end if (((2182 + 631)==((2524 + 1563) -(337 + 937))) and (v338==(0 -(0 -0)))) then v339=0 -0;v340=nil;v338=(31 + 2) -(4 + 28);end end else v92=v92 + 1 + 0;end break;end if (((185 + 4540)>=(2100 -(1481 -(460 + 166)))) and (v245==(0 + 0))) then local v307=0 + 0;while true do if (((4818 -((3161 -1402) + 40))==(14617 -11598)) and (v307==0)) then local v348=0 -0;while true do if ((v348==1) or ((6453 -2095)==((4785 -2029) -(381 + 793)))) then v307=1 + 0;break;end if ((2929<=(7211 -3815)) and (v348==(1406 -(386 + 1020)))) then v246=v116[1796 -(1625 + 169)];v247=v116[7 -3];v348=(984 -(129 + 854)) + 0;end end end if ((387==387) and (1==v307)) then v245=3 -(2 + 0);break;end end end end break;end if ((v244==(1987 -(1501 + 484))) or (2563<1590)) then local v267=0;while true do if (((1 -0)==v267) or ((371 + 1780)>(10492 -6623))) then v244=2 + 1;break;end if (((0 + 0 + 0)==v267) or (754>(5299 -(363 + 38)))) then v249=nil;v250=nil;v267=260 -(225 + 34);end end end if ((v244==(0 -0)) or ((1730 + 153)<(1071 -((1572 -(1514 + 43)) + 886)))) then local v268=0 + 0;while true do if (((11496 -9153)<(7003 -2284)) and (v268==(0 -0))) then v245=0 -0;v246=nil;v268=1 + 0;end if ((v268==(1 + 0)) or ((785 + 3725)<(93 + 239))) then v244=1066 -(609 + 456);break;end end end end end elseif (((3657 -1713)<(14729 -10024)) and (v117<=(1370 -(14 + 1316)))) then v114[v116[625 -(551 + 72)]]=v114[v116[4 -1]] + v114[v116[4]];elseif (((5709 -(569 + 528))>=(3812 -(469 + 778))) and (v117==(18 + 23))) then v114[v116[5 -3]]=v116[1 + 2];else v114[v116[1534 -(545 + 987)]]();end v92=v92 + (891 -((1974 -(1133 + 786)) + 835));break;end if (((3270 -(1020 + (1257 -(775 + 256))))<(7691 -3491)) and (v122==(883 -(292 + 591)))) then local v136=668 -(8 + 628 + 32);while true do if ((118<=2864) and (v136==(0 + 0))) then v116=v108[v92];v117=v116[1];v136=1 -0;end if ((v136==(2 -(1 + 0))) or ((2376 + 1021)<=(663 -435))) then v122=100 -(79 + (30 -10));break;end end end end break;end end break;end if (((1490 -671)<=((8414 -5232) + 1332)) and (v120==0)) then v121=0;v122=nil;v120=1 + 0;end end end end;A,B=v41(v11(v97));if  not A[1] then local v118=v51[4][v92] or "?";error("Script error at ["   .. v118   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end if (v74==0) then v75=v51[1];v76=v51[2];v74=1;end end end;return v45(v43(),{},v24)(...);end;v0=4;end end end
